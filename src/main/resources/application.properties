spring.application.name=emergency

# ?? ?? ???
server.port=8080
# DB ?? ??
# spring.datasource.dbcp2.driver-class-name=oracle.jdbc.driver.OracleDriver
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=bbs
spring.datasource.password=bbs

# ?? mybatis ??
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.type-aliases-package=com.example.emergency.vo

# JDBC Log ?? ??
# TRACE < DEBUG < INFO < WARN < ERROR < OFF  WARN?? ?? ? WARN? ???? ?? ??? ERROR, OF ? ???
# SQL ???? ??? ????
logging.level.jdbc.sqlonly=off
# SQL ??? ?? ??
logging.level.jdbc.sqltiming=info
# SQL ??? ?? ??
logging.level.jdbc.resultsettable=info
# SQL ?? ??? ??? ??
logging.level.jdbc.audit=off
# SQL ??? ??
logging.level.jdbc.resultset=off
# SQL ?? ? ?? ??
logging.level.jdbc.connection=off

# ??? ?? ?? ??
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr([rowNumber]: %line){red} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
